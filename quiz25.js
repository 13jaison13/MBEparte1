
const questions = [
  {
    question: "Qual o primeiro passo para aplicar a Medicina Baseada em EvidÃªncias?",
    options: ["Gerenciar custos", "Acessar, entender e usar evidÃªncias", "Relacionar-se bem com famÃ­lias", "Aplicar mÃ©todos estatÃ­sticos", "Criar um protocolo fixo"],
    answer: 1,
    explanation: "O primeiro passo Ã© saber acessar, interpretar e aplicar as evidÃªncias cientÃ­ficas na prÃ¡tica clÃ­nica."
  },
  {
    question: "Relacione os tipos de conhecimento Ã s suas definiÃ§Ãµes:\n(1) CientÃ­fico\n(2) EmpÃ­rico\n(3) TeolÃ³gico\n(4) FilosÃ³fico\n- FÃ© e doutrina religiosa\n- ObservaÃ§Ã£o e experiÃªncia prÃ¡tica\n- MÃ©todos de anÃ¡lise e validaÃ§Ã£o\n- ReflexÃ£o racional e crÃ­tica",
    options: ["3 â€“ 2 â€“ 1 â€“ 4", "4 â€“ 3 â€“ 1 â€“ 2", "1 â€“ 4 â€“ 2 â€“ 3", "2 â€“ 1 â€“ 4 â€“ 3"],
    answer: 0,
    explanation: "FÃ© = teolÃ³gico; experiÃªncia = empÃ­rico; mÃ©todo = cientÃ­fico; reflexÃ£o = filosÃ³fico."
  }
  // ... as demais questÃµes devem ser inseridas aqui
];

let score = 0;
let current = 0;

function loadQuestion() {
  const q = questions[current];
  document.getElementById("question").innerText = q.question;
  const optionsDiv = document.getElementById("options");
  optionsDiv.innerHTML = "";
  q.options.forEach((option, index) => {
    const opt = document.createElement("div");
    opt.className = "option";
    opt.innerHTML = `<input type='radio' name='option' value='${index}'> ${option}`;
    optionsDiv.appendChild(opt);
  });
  document.getElementById("explanation").style.display = "none";
  document.getElementById("explanation").innerText = "";
  document.getElementById("nextBtn").style.display = "none";
  document.getElementById("result").innerText = "";
}

function submitAnswer() {
  const selected = document.querySelector('input[name="option"]:checked');
  if (!selected) return alert("Selecione uma opÃ§Ã£o!");
  const selectedIndex = parseInt(selected.value);
  const correctIndex = questions[current].answer;
  const explanation = questions[current].explanation;

  if (selectedIndex === correctIndex) score++;

  const feedback = document.createElement('div');
  feedback.style.fontWeight = 'bold';
  feedback.style.marginTop = '10px';
  feedback.classList.add('animate');
  feedback.classList.add(selectedIndex === correctIndex ? 'acerto' : 'erro');
  const frasesAcerto = ["ParabÃ©ns, vocÃª Ã© um monstro da ciÃªncia!", "Acertou! Claramente nÃ£o estÃ¡ de brincadeira!"];
  const frasesErro = ["Errou feio, errou rude! ðŸ˜¬", "Nem pra chutar certo, hein? ðŸ˜‚"];
  const usada = selectedIndex === correctIndex ? frasesAcerto[Math.floor(Math.random() * frasesAcerto.length)] : frasesErro[Math.floor(Math.random() * frasesErro.length)];
  feedback.innerText = usada;
  document.getElementById("options").appendChild(feedback);

  document.getElementById("explanation").innerText = `ExplicaÃ§Ã£o: ${explanation}`;
  document.getElementById("explanation").style.display = "block";
  document.getElementById("nextBtn").style.display = "inline-block";
}

function nextQuestion() {
  current++;
  if (current < questions.length) {
    loadQuestion();
  } else {
    const pontos = score * 10;
    document.getElementById("quiz").innerHTML = `<div class='result'>VocÃª acertou ${score} de ${questions.length} perguntas!<br>PontuaÃ§Ã£o final: ${pontos} pontos</div>`;
  }
}

window.onload = function() {
  loadQuestion();
};
